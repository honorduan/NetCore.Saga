// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetCore.Saga.Server.Mysql.Context;

#nullable disable

namespace NetCore.Saga.Server.Mysql.Migrations
{
    [DbContext(typeof(SagaDbContext))]
    [Migration("20220507033637_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NetCore.Saga.Abstract.Entity.CompensationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompensableMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompensableMethod")
                        .HasComment("补偿的方法");

                    b.Property<string>("ExceptionMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ExceptionMessage")
                        .HasComment("异常信息");

                    b.Property<string>("GlobalId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("GlobalId")
                        .HasComment("全局id");

                    b.Property<string>("ImplementMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ImplementMethod")
                        .HasComment("实现的方法");

                    b.Property<string>("LocalId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("LocalId")
                        .HasComment("本地id");

                    b.Property<byte[]>("Payloads")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("Payloads")
                        .HasComment("参数");

                    b.Property<int>("Retries")
                        .HasColumnType("int")
                        .HasColumnName("Retries")
                        .HasComment("重试次数");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("ServiceId")
                        .HasComment("服务id");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ServiceName")
                        .HasComment("服务名");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint")
                        .HasColumnName("Timestamp")
                        .HasComment("时间戳");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)")
                        .HasColumnName("Type")
                        .HasComment("类型");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("TypeName")
                        .HasComment("方法类型");

                    b.HasKey("Id");

                    b.ToTable("CompensationTable", (string)null);
                });

            modelBuilder.Entity("NetCore.Saga.Abstract.Entity.EventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompensableMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompensableMethod")
                        .HasComment("补偿的方法");

                    b.Property<string>("ExceptionMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ExceptionMessage")
                        .HasComment("异常信息");

                    b.Property<string>("GlobalId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("GlobalId")
                        .HasComment("全局id");

                    b.Property<string>("ImplementMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ImplementMethod")
                        .HasComment("实现的方法");

                    b.Property<string>("LocalId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("LocalId")
                        .HasComment("本地id");

                    b.Property<byte[]>("Payloads")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("Payloads")
                        .HasComment("参数");

                    b.Property<int>("Retries")
                        .HasColumnType("int")
                        .HasColumnName("Retries")
                        .HasComment("重试次数");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("ServiceId")
                        .HasComment("服务id");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ServiceName")
                        .HasComment("服务名");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint")
                        .HasColumnName("Timestamp")
                        .HasComment("时间戳");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(24)")
                        .HasColumnName("Type")
                        .HasComment("类型");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("TypeName")
                        .HasComment("方法类型");

                    b.HasKey("Id");

                    b.ToTable("EventTable", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
